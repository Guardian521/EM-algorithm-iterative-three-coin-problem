硬币实验模型 coin_experiment
这个函数模拟了一个两阶段的硬币投掷实验：

第一阶段：以概率 pi 选择硬币 B，否则选择硬币 C。
第二阶段：根据第一阶段选择的硬币，以相应的正面概率 p（对于硬币 B）或 q（对于硬币 C）投掷硬币，并记录结果。
函数返回四组数据：

results：所有投掷的结果（1表示正面，0表示反面）。
p_A：硬币 A（即第一阶段的选择）的正面概率。
p_B：硬币 B 的正面概率。
p_C：硬币 C 的正面概率。
EM算法 em_algorithm
这个函数实现了EM算法，用于根据观测数据 observations 估计参数 pi、p 和 q。

E步骤：计算隐变量 mu，表示给定观测结果下，每次投掷选择硬币 B 的概率。
M步骤：根据 mu 更新参数 pi、p 和 q。
收敛判断：如果参数的变化小于阈值 tol，则停止迭代。
执行结果
代码首先使用 coin_experiment 函数生成一组观测数据，然后使用 em_algorithm 函数基于初始参数 pi_0、p_0 和 q_0 对这些数据进行参数估计。最后，打印出估计的参数值。

预期的执行结果
输出将是估计的参数 pi、p 和 q，它们分别对应于硬币 A 被选中的概率，硬币 B 正面朝上的概率，以及硬币 C 正面朝上的概率。由于使用了随机种子 seed=21，每次运行的结果应该是可复现的。

对执行结果的解释和对代码的分析总结
EM算法通过迭代优化来估计隐藏参数，即使在观测数据不完全的情况下也能有效工作。在这个例子中，算法从随机初始化的参数开始，通过多次迭代逐渐调整参数，直到达到收敛条件。这种方法在处理含有隐变量的模型时非常有用，例如在混合模型、隐马尔可夫模型等场景中。
